// @flow
/**
 * Handles the formatting of warnings and errors generated by modules.
 * @private
 */

const errorStyles = 'padding: 2px; font-weight: bold; background: red; color: black'
const warningStyles = 'padding: 2px; font-weight: bold; background: gold; color: black'

function formatMessage(type:string, modulePath:string, messageBody:string, docPath:string) {
  const header = `%c -- ${type} --------------------------------------------------- ${modulePath} -- `

  const body = `%c


${messageBody}

  `

  const info = `%c
Please see the documentation at %chttps://www.polished.js.org/${docPath} %cfor more information.

  `

  return `${header}${body}${info}`
}

function generateHeaderStyles(type:string) {
  return type === 'error' ? errorStyles : warningStyles
}

function messageHandler(type:string, modulePath:string, messageBody:string, docPath:string) {
  const message = formatMessage(type, modulePath, messageBody, docPath)
  const headerStyles = generateHeaderStyles(type)
  // eslint-disable-next-line no-console
  console.log(message, headerStyles, 'color: black', 'color: slategray', 'color: blue', 'color: slategray')
}

export function error(modulePath: string, messageBody: string, docPath: string) {
  messageHandler('error', modulePath, messageBody, docPath)
}

export function warning(modulePath: string, messageBody: string, docPath: string) {
  messageHandler('warning', modulePath, messageBody, docPath)
}

