// flow-typed signature: f07c1744ef4451ec50749b239692d187
// flow-typed version: <<STUB>>/tsgen_v1.3.0/flow_v0.101.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'tsgen'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'tsgen' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'tsgen/lib/__test__/any-type.test' {
  declare module.exports: any;
}

declare module 'tsgen/lib/__test__/common-js-default-export.test' {
  declare module.exports: any;
}

declare module 'tsgen/lib/__test__/index.test' {
  declare module.exports: any;
}

declare module 'tsgen/lib/__test__/jest-types.test' {
  declare module.exports: any;
}

declare module 'tsgen/lib/__test__/optional.test' {
  declare module.exports: any;
}

declare module 'tsgen/lib/__test__/tuples.test' {
  declare module.exports: any;
}

declare module 'tsgen/lib/build' {
  declare module.exports: any;
}

declare module 'tsgen/lib/cli' {
  declare module.exports: any;
}

declare module 'tsgen/lib/Context' {
  declare module.exports: any;
}

declare module 'tsgen/lib/index' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/AnyTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/ArrayTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/ArrowFunctionExpression' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/BinaryExpression' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/BooleanLiteral' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/BooleanTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/CallExpression' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/ConditionalExpression' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/DeclareClass' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/DeclareFunction' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/ExistentialTypeParam' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/ExportSpecifier' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/FunctionDeclaration' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/FunctionExpression' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/FunctionTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/GenericTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/Identifier' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/ImportDefaultSpecifier' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/ImportSpecifier' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/index' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/InterfaceDeclaration' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/IntersectionTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/LogicalExpression' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/MemberExpression' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/MixedTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/NullableTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/NullLiteralTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/NumberTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/NumericLiteral' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/NumericLiteralTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/ObjectExpression' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/ObjectProperty' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/ObjectTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/ObjectTypeCallProperty' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/ObjectTypeIndexer' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/ObjectTypeProperty' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/SingleImportDeclaration' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/SingleVariableDeclaration' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/StringLiteral' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/StringLiteralTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/StringTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/TemplateLiteral' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/TupleTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/TypeAlias' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/TypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/TypeCastExpression' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/TypeofTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/TypeParameterInstantiation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/UnionTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/printers/VoidTypeAnnotation' {
  declare module.exports: any;
}

declare module 'tsgen/lib/walkers/ClassDeclaration' {
  declare module.exports: any;
}

declare module 'tsgen/lib/walkers/DeclareClass' {
  declare module.exports: any;
}

declare module 'tsgen/lib/walkers/DeclareFunction' {
  declare module.exports: any;
}

declare module 'tsgen/lib/walkers/DeclareVariable' {
  declare module.exports: any;
}

declare module 'tsgen/lib/walkers/ExportDefaultDeclaration' {
  declare module.exports: any;
}

declare module 'tsgen/lib/walkers/ExportNamedDeclaration' {
  declare module.exports: any;
}

declare module 'tsgen/lib/walkers/ExpressionStatement' {
  declare module.exports: any;
}

declare module 'tsgen/lib/walkers/FunctionDeclaration' {
  declare module.exports: any;
}

declare module 'tsgen/lib/walkers/IfStatement' {
  declare module.exports: any;
}

declare module 'tsgen/lib/walkers/ImportDeclaration' {
  declare module.exports: any;
}

declare module 'tsgen/lib/walkers/index' {
  declare module.exports: any;
}

declare module 'tsgen/lib/walkers/InterfaceDeclaration' {
  declare module.exports: any;
}

declare module 'tsgen/lib/walkers/TryStatement' {
  declare module.exports: any;
}

declare module 'tsgen/lib/walkers/TypeAlias' {
  declare module.exports: any;
}

declare module 'tsgen/lib/walkers/VariableDeclaration' {
  declare module.exports: any;
}

// Filename aliases
declare module 'tsgen/lib/__test__/any-type.test.js' {
  declare module.exports: $Exports<'tsgen/lib/__test__/any-type.test'>;
}
declare module 'tsgen/lib/__test__/common-js-default-export.test.js' {
  declare module.exports: $Exports<'tsgen/lib/__test__/common-js-default-export.test'>;
}
declare module 'tsgen/lib/__test__/index.test.js' {
  declare module.exports: $Exports<'tsgen/lib/__test__/index.test'>;
}
declare module 'tsgen/lib/__test__/jest-types.test.js' {
  declare module.exports: $Exports<'tsgen/lib/__test__/jest-types.test'>;
}
declare module 'tsgen/lib/__test__/optional.test.js' {
  declare module.exports: $Exports<'tsgen/lib/__test__/optional.test'>;
}
declare module 'tsgen/lib/__test__/tuples.test.js' {
  declare module.exports: $Exports<'tsgen/lib/__test__/tuples.test'>;
}
declare module 'tsgen/lib/build.js' {
  declare module.exports: $Exports<'tsgen/lib/build'>;
}
declare module 'tsgen/lib/cli.js' {
  declare module.exports: $Exports<'tsgen/lib/cli'>;
}
declare module 'tsgen/lib/Context.js' {
  declare module.exports: $Exports<'tsgen/lib/Context'>;
}
declare module 'tsgen/lib/index.js' {
  declare module.exports: $Exports<'tsgen/lib/index'>;
}
declare module 'tsgen/lib/printers/AnyTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/AnyTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/ArrayTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/ArrayTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/ArrowFunctionExpression.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/ArrowFunctionExpression'>;
}
declare module 'tsgen/lib/printers/BinaryExpression.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/BinaryExpression'>;
}
declare module 'tsgen/lib/printers/BooleanLiteral.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/BooleanLiteral'>;
}
declare module 'tsgen/lib/printers/BooleanTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/BooleanTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/CallExpression.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/CallExpression'>;
}
declare module 'tsgen/lib/printers/ConditionalExpression.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/ConditionalExpression'>;
}
declare module 'tsgen/lib/printers/DeclareClass.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/DeclareClass'>;
}
declare module 'tsgen/lib/printers/DeclareFunction.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/DeclareFunction'>;
}
declare module 'tsgen/lib/printers/ExistentialTypeParam.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/ExistentialTypeParam'>;
}
declare module 'tsgen/lib/printers/ExportSpecifier.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/ExportSpecifier'>;
}
declare module 'tsgen/lib/printers/FunctionDeclaration.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/FunctionDeclaration'>;
}
declare module 'tsgen/lib/printers/FunctionExpression.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/FunctionExpression'>;
}
declare module 'tsgen/lib/printers/FunctionTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/FunctionTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/GenericTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/GenericTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/Identifier.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/Identifier'>;
}
declare module 'tsgen/lib/printers/ImportDefaultSpecifier.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/ImportDefaultSpecifier'>;
}
declare module 'tsgen/lib/printers/ImportSpecifier.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/ImportSpecifier'>;
}
declare module 'tsgen/lib/printers/index.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/index'>;
}
declare module 'tsgen/lib/printers/InterfaceDeclaration.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/InterfaceDeclaration'>;
}
declare module 'tsgen/lib/printers/IntersectionTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/IntersectionTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/LogicalExpression.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/LogicalExpression'>;
}
declare module 'tsgen/lib/printers/MemberExpression.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/MemberExpression'>;
}
declare module 'tsgen/lib/printers/MixedTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/MixedTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/NullableTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/NullableTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/NullLiteralTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/NullLiteralTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/NumberTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/NumberTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/NumericLiteral.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/NumericLiteral'>;
}
declare module 'tsgen/lib/printers/NumericLiteralTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/NumericLiteralTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/ObjectExpression.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/ObjectExpression'>;
}
declare module 'tsgen/lib/printers/ObjectProperty.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/ObjectProperty'>;
}
declare module 'tsgen/lib/printers/ObjectTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/ObjectTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/ObjectTypeCallProperty.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/ObjectTypeCallProperty'>;
}
declare module 'tsgen/lib/printers/ObjectTypeIndexer.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/ObjectTypeIndexer'>;
}
declare module 'tsgen/lib/printers/ObjectTypeProperty.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/ObjectTypeProperty'>;
}
declare module 'tsgen/lib/printers/SingleImportDeclaration.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/SingleImportDeclaration'>;
}
declare module 'tsgen/lib/printers/SingleVariableDeclaration.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/SingleVariableDeclaration'>;
}
declare module 'tsgen/lib/printers/StringLiteral.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/StringLiteral'>;
}
declare module 'tsgen/lib/printers/StringLiteralTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/StringLiteralTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/StringTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/StringTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/TemplateLiteral.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/TemplateLiteral'>;
}
declare module 'tsgen/lib/printers/TupleTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/TupleTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/TypeAlias.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/TypeAlias'>;
}
declare module 'tsgen/lib/printers/TypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/TypeAnnotation'>;
}
declare module 'tsgen/lib/printers/TypeCastExpression.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/TypeCastExpression'>;
}
declare module 'tsgen/lib/printers/TypeofTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/TypeofTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/TypeParameterInstantiation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/TypeParameterInstantiation'>;
}
declare module 'tsgen/lib/printers/UnionTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/UnionTypeAnnotation'>;
}
declare module 'tsgen/lib/printers/VoidTypeAnnotation.js' {
  declare module.exports: $Exports<'tsgen/lib/printers/VoidTypeAnnotation'>;
}
declare module 'tsgen/lib/walkers/ClassDeclaration.js' {
  declare module.exports: $Exports<'tsgen/lib/walkers/ClassDeclaration'>;
}
declare module 'tsgen/lib/walkers/DeclareClass.js' {
  declare module.exports: $Exports<'tsgen/lib/walkers/DeclareClass'>;
}
declare module 'tsgen/lib/walkers/DeclareFunction.js' {
  declare module.exports: $Exports<'tsgen/lib/walkers/DeclareFunction'>;
}
declare module 'tsgen/lib/walkers/DeclareVariable.js' {
  declare module.exports: $Exports<'tsgen/lib/walkers/DeclareVariable'>;
}
declare module 'tsgen/lib/walkers/ExportDefaultDeclaration.js' {
  declare module.exports: $Exports<'tsgen/lib/walkers/ExportDefaultDeclaration'>;
}
declare module 'tsgen/lib/walkers/ExportNamedDeclaration.js' {
  declare module.exports: $Exports<'tsgen/lib/walkers/ExportNamedDeclaration'>;
}
declare module 'tsgen/lib/walkers/ExpressionStatement.js' {
  declare module.exports: $Exports<'tsgen/lib/walkers/ExpressionStatement'>;
}
declare module 'tsgen/lib/walkers/FunctionDeclaration.js' {
  declare module.exports: $Exports<'tsgen/lib/walkers/FunctionDeclaration'>;
}
declare module 'tsgen/lib/walkers/IfStatement.js' {
  declare module.exports: $Exports<'tsgen/lib/walkers/IfStatement'>;
}
declare module 'tsgen/lib/walkers/ImportDeclaration.js' {
  declare module.exports: $Exports<'tsgen/lib/walkers/ImportDeclaration'>;
}
declare module 'tsgen/lib/walkers/index.js' {
  declare module.exports: $Exports<'tsgen/lib/walkers/index'>;
}
declare module 'tsgen/lib/walkers/InterfaceDeclaration.js' {
  declare module.exports: $Exports<'tsgen/lib/walkers/InterfaceDeclaration'>;
}
declare module 'tsgen/lib/walkers/TryStatement.js' {
  declare module.exports: $Exports<'tsgen/lib/walkers/TryStatement'>;
}
declare module 'tsgen/lib/walkers/TypeAlias.js' {
  declare module.exports: $Exports<'tsgen/lib/walkers/TypeAlias'>;
}
declare module 'tsgen/lib/walkers/VariableDeclaration.js' {
  declare module.exports: $Exports<'tsgen/lib/walkers/VariableDeclaration'>;
}
